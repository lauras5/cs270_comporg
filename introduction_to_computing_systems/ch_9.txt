CHAPTER 9: TRAP ROUTINES AND SUBROUTINES

9.1 LC-3 TRAP Routines
    9.1.1 Introduction
         - obtaining input from keyboard required specific knowledge
         1. hardware data registers for keyboard and monitor
         2. hardware status registers for keyboard and monitor
         3. async nature of keyboard input relative to executing program
         - privileged: it is ill-advised to give user programmers access to these registers
         - The operating system does have the proper degree of privilege.
         - refer to the request made by user program as a SERVICE CALL or SYSTEM CALL
    9.1.2 The TRAP Mechanism
        elements:   1. A set of service routines, up to 256 service routines can be specified
                        (refer to Table A.2 in Appendix A)
                    2. A table of the starting addresses
                    3. The TRAP instruction
                    4. A linkage back to user program, return control to user program
    9.1.3 The TRAP Instruction
        2 steps:    1. changes PC to starting address of service routine on basis of trap vector
                    2. provides "way back" in form of linkage
        - TRAP opcode --> 1111, trap vector --> bits[7:0]
        - [11:8] must be 0
        Trap execution phase is 4 parts:
                    1. 8 bit vector zero-extended to 16 bits, loaded into MAR
                    2. Trap Vector Table is in memory locations xOOOO to xOOFF, loaded into MDR
                    3. provide a way back to the user program
                    4. contents of MDR loaded into PC
        - trap vector "points" to the starting address of the TRAP routine
    9.1.4 The Complete Mechanism
    9.1.5 TRAP Routines for Handling I/O
        1. add the appropriate .ORIG and .END pseudo-ops.
        2. terminate the input service routine with the JMP R7 instruction
    9.1.6 TRAP Routine for Halting the Computer
        - service routine for keyboard input
    9.1.7 Saving and restoring registers
        when to save:   1. if the value will be destroyed by some subsequent action, and
                        2. if we will need to use it after that subsequent action.

9.2 Subroutines
    - functions basically
    9.2.1 The Call/Return Mechanism

Trap Vector Table consists of memory locations xOOOO to xOOFF
