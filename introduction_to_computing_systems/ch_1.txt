CHAPTER 1 Welcome Aboard

1.1 What We Will Try to Do
    All computers can perform the same functions, but the more powerful ones do it faster.

1.2 How we will Get There
    LC-3
    Higher level languages simply allow humans to write programs more quickly and easily,
    but they perform the same functions and are translated into lower level languages to be run.

1.3 Two Recurring Themes
    It's difficult to increase accuracy w/ analog machines, very easy on digital machines.
    1.3.1 The Notion of Abstraction
        productivity enhancer. It allows us to deal with a situation at a higher level,
        focusing on the essential aspects, while keeping the component ideas in the background.
    1.3.2 Hardware vs Software
        learn both equally, makes better programmer

1.4 A Computer System
    Ambiguity

1.5 Two Very Important Ideas
    1. computers do same thing, none more than other
    2. natural language vs computer language

1.6 Computers as Universal Computational Devices
    Digital machinesâ€”machines that perform computations by manipulating a fixed finite
    set of digits or letters.
    Turing proposed in 1937 that all computations could be carried out by a particular kind of machine,
    which is now called a Turing machine.

1.7 How do we get electronics to do the work?
    Levels of Transformation:
        Problem, Algorithm, language, machine (ISA) architecture, microarchitecture, circuits,
        devices
    1.7.1 The Statement of the problem
        Natural language is filled with ambiguity.
    1.7.2 The Algorithm:
        Transform the problem into words a computer can understand, an algorithm.
    1.7.5 The Micro-architecture:
        Detailed organization of an implementation.
    1.7.6 The Logic Circuit
         logic designer decides how to best make the trade-offs between cost and performance





